<?php

require_once dirname(__FILE__).'/../../../../src/model/query/yModelField.php';

/**
 * Test class for yModelField.
 * Generated by PHPUnit on 2011-07-23 at 14:07:30.
 */
class yModelFieldTest extends PHPUnit_Framework_TestCase{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(){
        
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(){
        
    }
    public function testGetClass(){
        $f = new yModelField('post', 'id');
        $this->assertEquals('post', $f->getClass());
    }
    public function testIs(){
        $f = new yModelField('post', 'id');
        $e = $f->is(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('is', $e->getOperator());
    }
    public function testNot(){
        $f = new yModelField('post', 'id');
        $e = $f->not(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('not', $e->getOperator());
    }
    public function testGt(){
        $f = new yModelField('post', 'id');
        $e = $f->gt(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('gt', $e->getOperator());
    }
    public function testGte(){
        $f = new yModelField('post', 'id');
        $e = $f->gte(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('gte', $e->getOperator());
    }
    public function testLt(){
        $f = new yModelField('post', 'id');
        $e = $f->lt(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('lt', $e->getOperator());
    }
    public function testLte(){
        $f = new yModelField('post', 'id');
        $e = $f->lte(2);
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(2, $e->getRight());
        $this->assertEquals('lte', $e->getOperator());
    }
    public function testIn(){
        $f = new yModelField('post', 'id');
        $e = $f->in(array(2, 3));
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(array(2, 3), $e->getRight());
        $this->assertEquals('in', $e->getOperator());
    }
    public function testNotIn(){
        $f = new yModelField('post', 'id');
        $e = $f->notIn(array(2, 3));
        $this->assertEquals('yModelExpression', get_class($e));
        $this->assertEquals($f, $e->getLeft());
        $this->assertEquals(array(2, 3), $e->getRight());
        $this->assertEquals('notIn', $e->getOperator());
    }
    /**
     * @todo Implement testLike().
     */
    public function testLike(){
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    /**
     * @todo Implement testSum().
     */
    public function testSum(){
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    /**
     * @todo Implement testCount().
     */
    public function testCount(){
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
}

